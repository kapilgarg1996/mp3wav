#!/usr/bin/python

from PyQt4.QtCore import *
from PyQt4.QtGui import *
import sys
import argparse
from mp3wav import application
from mp3wav import converter
from mp3wav.exceptions.fileexception import FileTypeException
from mp3wav.exceptions.libraryexception import LibraryException
from mp3wav.exceptions.filenotexistexception import FileNotExistException
from mp3wav.exceptions.samefileexception import SameFileException
from mp3wav.exceptions.overwriteexception import OverWriteException

def appInvoker():
	app = QApplication(sys.argv)
        try:
	    mp3wavapp = application.Mp3WavApp()
	    mp3wavapp.show()
	    app.exec_()
	except FileTypeException:
	    pass
	except FileNotExistException:
	    pass
	except OverWriteException:
	    pass
	except LibraryException:
	    pass
        except SameFileException:
            pass

def commandInvoker(infile, outfile, overwrite=None):
	try:
		convertcom = converter.Converter(infile, outfile, overwrite)
		convertcom.convert()
	except FileTypeException:
		pass
	except FileNotExistException:
		pass
	except OverWriteException:
		pass
	except LibraryException:
		pass

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Converts Mp3 files to Wav files", epilog="Visit github repo for further info")
    parser.add_argument('inputfile', default='', nargs='?')
    parser.add_argument('outputfile', default='', nargs='?')
    parser.add_argument('-o', '--overwrite', dest='overwrite', action='store_const', const=True, default=False, help='to overwrite existing output file')
    parser.add_argument('-a', '--app', dest='application', action='store_const', const=appInvoker, default=commandInvoker, help='to invoke gui application (No filenames required)')
    output = parser.parse_args()
    if(output.application == appInvoker):
        output.application()
    else:
        output.application(output.inputfile, output.outputfile, output.overwrite)
    


